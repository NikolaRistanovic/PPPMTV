import pyaudio
import wave
import matplotlib.pyplot as plt
import numpy
from numpy.fft import fft, fftfreq, ifft
 
FORMAT = pyaudio.paInt16
CHANNELS = 1
RATE = 48000
CHUNK = 1024
RECORD_SECONDS = 3
WAVE_OUTPUT_FILENAME = "Prijem.wav"
n = 143360

audio = pyaudio.PyAudio()
 
#start
stream = audio.open(format=FORMAT, channels=CHANNELS,
                rate=RATE, input=True,
                frames_per_buffer=CHUNK)
frames = []
 
for i in range(0, int(RATE / CHUNK * RECORD_SECONDS)):
    data = stream.read(CHUNK)
    frames.append(data)

print ("fin")

#stop
stream.stop_stream()
stream.close()
audio.terminate()
 
waveFile = wave.open(WAVE_OUTPUT_FILENAME, 'wb')
waveFile.setnchannels(CHANNELS)
waveFile.setsampwidth(audio.get_sample_size(FORMAT))
waveFile.setframerate(RATE)
waveFile.writeframes(b''.join(frames))
waveFile.close()

#plottin
waveFile = wave.open(WAVE_OUTPUT_FILENAME, 'r')

raw = waveFile.readframes(-1)
raw = numpy.frombuffer(raw,numpy.int16)
time = numpy.linspace(0, len(raw)/(RATE*2), num=len(raw))

freqs = fftfreq(n, RATE)
mask = freqs > 0
fft_vals = fft(raw)
fft_theo = 2.0 * numpy.abs(fft_vals/n)

plt.plot(time,fft_theo[mask])
plt.show()